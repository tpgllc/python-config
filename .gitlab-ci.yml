# This file is a template, and might need editing before it works on your project.
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Python.gitlab-ci.yml

# Official language image. Look for the different tagged releases at:
# https://hub.docker.com/r/library/python/tags/
image: python:latest

# Change pip's cache directory to be inside the project directory since we can
# only cache local items.
variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"

# Pip's cache doesn't store the python packages
# https://pip.pypa.io/en/stable/topics/caching/

# The following example is for a project that runs branch and merge request pipelines 
# only, but does not run pipelines for any other case. It runs:
#    Branch pipelines when a merge request is not open for the branch.
#    Merge request pipelines when a merge request is open for the branch.
workflow:
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    #- if: $CI_COMMIT_BRANCH && $CI_OPEN_MERGE_REQUESTS
    #  when: never
    #- if: $CI_COMMIT_BRANCH

#
# If you want to also cache the installed packages, you have to install
# them in a virtualenv and cache it as well.
cache:
  paths:
    - .cache/pip
    - venv/

before_script:
  - python --version ; pip --version  # For debugging
  - pip install virtualenv
  - virtualenv venv
  - source venv/bin/activate

run:
  script:
    # - python setup.py test
    - pip install tox flake8 pytest # you can also use tox
    - if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - tox -e py,flake8
    - pytest -vs

# test:
#   script:
#     - pip install ruff tox  # you can also use tox
#     - pip install --editable ".[test]"
#     - tox -e py,ruff

# run:
#   script:
#     - pip install .
#     # run the command here
#   artifacts:
#     paths:
#       - build/*

# pages:
#   script:
#     - pip install sphinx sphinx-rtd-theme
#     - cd doc
#     - make html
#     - mv build/html/ ../public/
#   artifacts:
#     paths:
#       - public
#   rules:
#     - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH

# deploy:
#   stage: deploy
#   script: echo "Define your deployment script!"
#   environment: production
